name: Build-with-configs (JSON)

on:
  workflow_dispatch:
    inputs:
      board_flag:
        description: "Board flag (default: MARAUDER_V7)"
        required: false
        default: "MARAUDER_V7"
      board_label:
        description: "Optional board_label override"
        required: false
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Export board env from JSON manifest
        run: |
          echo "BOARD_FLAG=${{ github.event.inputs.board_flag }}" >> $GITHUB_ENV
          echo "BOARD_LABEL=${{ github.event.inputs.board_label }}" >> $GITHUB_ENV
          python3 scaffold/tools/export_env_from_json.py >> $GITHUB_ENV

      - name: Show resolved configuration
        run: |
          echo "Board:  $BOARD_LABEL ($FLAG)"
          echo "FQBN:   $FQBN"
          echo "Core:   $CORE_VERSION"
          echo "FS/PS:  $FILESYSTEM / $PARTITION"
          echo "Addr:   $ADDR"
          echo "Disp:   enabled=$DISPLAY_ENABLED model=${DISPLAY_MODEL:-'(manifest)'}"
          echo "Libs:   NimBLE=$LIBS_NIMBLE_VERSION  ESPAsync=$LIBS_ESP_ASYNC_VERSION"

      - name: Setup Arduino CLI & ESP32 core
        uses: arduino/setup-arduino-cli@v2
        with:
          version: latest
      - name: Install ESP32 core
        run: |
          arduino-cli config init
          arduino-cli core update-index
          arduino-cli core install esp32:esp32@${CORE_VERSION}

      - name: Clean conflicting libraries (XPT touch/TFT leftovers)
        run: |
          LIBDIR="$HOME/Arduino/libraries"
          mkdir -p "$LIBDIR"
          cd "$LIBDIR"
          rm -rf XPT2049Touch XPT2046_Touchscreen TFT_eSPI || true

      - name: Install required libraries
        run: |
          arduino-cli lib install NimBLE-Arduino@${LIBS_NIMBLE_VERSION}
          REPO="${LIBS_ESP_ASYNC_REPO:-bigbrodude6119/ESPAsyncWebServer}"
          VER="${LIBS_ESP_ASYNC_VERSION:-master}"
          cd "$HOME/Arduino/libraries"
          git clone --depth 1 --branch "$VER" "https://github.com/$REPO" ESPAsyncWebServer

      - name: Generate config.h (JSON-driven)
        run: |
          python3 scaffold/tools/gen_user_config.py \
            --boards-json scaffold/configs/boards/boards_manifest.json \
            --defines-json scaffold/configs/defines/build_defines.json \
            --modules-json scaffold/configs/modules/modules_presets.json \
            --board-flag "$BOARD_FLAG" \
            --board-label "$BOARD_LABEL" \
            --out scaffold/.autogen/config.h

      - name: Generate TFT_eSPI header (serial-only safe)
        run: |
          mkdir -p scaffold/.tft_setup
          python3 scaffold/tools/gen_tft_setup_json.py \
            --boards-json scaffold/configs/boards/boards_manifest.json \
            --displays-json scaffold/configs/displays/display_presets.json \
            --pins-json scaffold/configs/pins/pin_presets.json \
            --board-label "$BOARD_LABEL" \
            --board-flag "$BOARD_FLAG" \
            --model "${DISPLAY_MODEL}" \
            --tft-enabled "${DISPLAY_ENABLED}" \
            --out-dir scaffold/.tft_setup

      - name: Build (compile only)
        run: |
          EXTRA="-I${{ github.workspace }}/scaffold/.tft_setup -I${{ github.workspace }}/scaffold/.autogen"
          arduino-cli compile \
            --fqbn "$FQBN" \
            --build-property compiler.cpp.extra_flags="$EXTRA" \
            --build-property build.partitions="$PARTITION" \
            --output-dir build_out \
            scaffold/src

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: fw-${{ env.FLAG }}-${{ env.CORE_VERSION }}-${{ env.DISPLAY_MODEL || 'serial' }}
          path: build_out
