# ---------- Bundle EVERYTHING used to compile (verbose & safe) ----------
      - name: Create toolchain bundle (cores, libs, cli, sketch, configs, manifest)
        id: bundle
        shell: bash
        run: |
          set -euo pipefail

          BDIR="${GITHUB_WORKSPACE}/toolchain_bundle"
          OUTDIR="${GITHUB_WORKSPACE}/dist"
          mkdir -p "$BDIR" "$OUTDIR"

          echo "== Collecting pieces =="

          # 1) Arduino CLI binary
          if [ -d "${GITHUB_WORKSPACE}/bin" ]; then
            mkdir -p "$BDIR/bin"
            cp -a "${GITHUB_WORKSPACE}/bin/." "$BDIR/bin/"
          else
            echo "WARN: ${GITHUB_WORKSPACE}/bin not found (CLI still in PATH)."
          fi

          # 2) Arduino15 data (cores/toolchains + config)
          if [ -d "${ARD15}" ]; then
            mkdir -p "$BDIR/arduino15"
            cp -a "${ARD15}/." "$BDIR/arduino15/"
          else
            echo "WARN: ARD15 (${ARD15}) not found."
          fi

          # 3) Libraries (all)
          if [ -d "${ARDLIBS}" ]; then
            mkdir -p "$BDIR/Arduino/libraries"
            cp -a "${ARDLIBS}/." "$BDIR/Arduino/libraries/"
          else
            echo "WARN: ARDLIBS (${ARDLIBS}) not found."
          fi

          # 4) Prepared sketch (what was compiled)
          if [ -d "_build/esp32_marauder_rewired" ]; then
            mkdir -p "$BDIR/sketch"
            cp -a "_build/esp32_marauder_rewired/." "$BDIR/sketch/"
          else
            echo "::error ::Prepared sketch folder missing"; exit 1
          fi

          # 5) Repo configs folder (including custom.json if used)
          if [ -d "scaffold/configs" ]; then
            mkdir -p "$BDIR/configs"
            cp -a "scaffold/configs/." "$BDIR/configs/"
          fi

          # 6) Manifest with versions and metadata
          {
            echo "Repo: $GITHUB_REPOSITORY"
            echo "Commit: $GITHUB_SHA"
            echo "FQBN: ${{ inputs.fqbn }}"
            echo "Core Version: ${{ inputs.core_version }}"
            echo "Config: ${{ steps.cfg.outputs.config_file }}"
            echo
            echo "arduino-cli version:"
            arduino-cli version || true
            echo
            echo "Installed cores:"
            arduino-cli core list || true
            echo
            echo "Installed libraries (user):"
            ls -la "${ARDLIBS}" || true
          } > "$BDIR/MANIFEST.txt"

          echo "== Bundle tree =="
          du -sh "$BDIR" || true
          find "$BDIR" -maxdepth 2 -type d | sort

          TAR="${OUTDIR}/toolchain_${GITHUB_SHA}.tar.gz"
          echo "== Creating archive =="
          tar -C "${GITHUB_WORKSPACE}" -czhf "$TAR" "$(basename "$BDIR")"

          echo "Archive created: $TAR"
          ls -lh "$TAR"

          echo "bundle=$TAR" >> $GITHUB_OUTPUT

      - name: Sanitize bundle artifact name
        id: sanitize_bundle
        run: |
          NAME="toolchain_${{ inputs.fqbn }}_${{ github.sha }}"
          SAFE_NAME=$(echo "$NAME" | sed 's/[:<>|*?\\\/]/_/g')
          echo "safe_bundle_name=$SAFE_NAME" >> $GITHUB_OUTPUT

      - name: Upload toolchain bundle
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.sanitize_bundle.outputs.safe_bundle_name }}
          path: ${{ steps.bundle.outputs.bundle }}
          if-no-files-found: error
          retention-days: 14
          compression-level: 6
          overwrite: false
          include-hidden-files: false
