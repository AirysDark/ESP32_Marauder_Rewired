// esp32_marauder_rewired.ino
// Minimal, library-driven sketch entry for ESP32 Marauder Rewired

#include <Arduino.h>

// Autogenerated build config (our workflow writes this into .autogen and
// adds -I flags so the include below resolves at compile time)
#include "config.h"

// Pull in the whole menu/registry library in one shot.
// The workflow stages this under $HOME/Arduino/libraries/MarauderMenu
// and sets includes=MarauderMenu.h, so the builder will compile/link
// menus/*.cpp (init_tool_registry, showMainMenu, etc.)
#include <MarauderMenu.h>

// Optional: a tiny heartbeat so you know we're alive even on serial-only builds
static uint32_t lastBeat = 0;

void setup() {
  // Serial console (safe default)
  Serial.begin(115200);
  while (!Serial && millis() < 1500) { /* wait briefly on USB-CDC boards */ }
  delay(150);

  Serial.println(F("\n=== ESP32 Marauder Rewired ==="));
  Serial.println(F("Booting menu/registry system..."));

  // Initialize the tool registry (provided by RegistryInit.cpp)
  init_tool_registry();

  // Show the top-level menu (provided by MenuFromRegistry.cpp)
  showMainMenu();

  Serial.println(F("Setup complete."));
}

void loop() {
  // If your menu system uses cooperative updates, you can add a tick here later.
  // For now, keep the loop light so serial-only builds don't starve the watchdog.
  if (millis() - lastBeat > 1000) {
    lastBeat = millis();
    // Comment this out if itâ€™s too chatty
    // Serial.println(F("[tick]"));
  }
  delay(10);
}