- name: Resolve FS/Partition
        id: fs
        shell: bash
        run: |
          set -euo pipefail
          FS_INPUT="${{ github.event.inputs.filesystem }}"
          PART_INPUT_RAW="${{ github.event.inputs.partition }}"

          # Map pretty label -> actual CSV filename (if present)
          part_from_pretty () {
            local s="$1"
            # Default selection means "use manifest"
            if [ -z "$s" ] || [ "$s" = "Default (use manifest)" ]; then
              echo ""
              return
            fi

            # If it looks like "... (filename.csv)" extract filename without regex
            case "$s" in
              *"("*.csv")"*)
                local tmp="${s##*(}"   # strip everything up to last "("
                tmp="${tmp%)}"        # strip trailing ")"
                echo "$tmp"
                ;;
              *)
                # Fallback: assume user typed a raw filename
                echo "$s"
                ;;
            esac
          }

          PART_INPUT="$(part_from_pretty "$PART_INPUT_RAW")"

          # Prefer user input; otherwise manifest defaults resolved earlier
          FS="${FS_INPUT:-${{ steps.map.outputs.def_fs }}}"
          if [ -n "$PART_INPUT" ]; then
            PART="$PART_INPUT"
          else
            PART="${{ steps.map.outputs.def_part }}"
          fi

          echo "fs=$FS" >> $GITHUB_OUTPUT
          echo "partition=$PART" >> $GITHUB_OUTPUT

          # If a custom partition CSV is referenced, install it into the core (optional convenience)
          if [ -n "$PART" ]; then
            SRC="${GITHUB_WORKSPACE}/partitions/$PART"
            DEST="$HOME/.arduino15/packages/esp32/hardware/esp32/${{ github.event.inputs.core_version }}/tools/partitions"
            if [ -f "$SRC" ]; then
              mkdir -p "$DEST"
              cp -f "$SRC" "$DEST/$PART"
              echo "Installed custom partition CSV to $DEST/$PART"
            else
              echo "Partition CSV '$PART' not found in repo /partitions; relying on core's copy (if any)."
            fi
          fi